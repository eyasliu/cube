{"version":3,"sources":["src\\app.js"],"names":["$","$top","$area","$preview","tpl","area","html","template","_","Area","width","height","active","temp","arr","y","row","push","x","axis","includes","data","matrix","console","log","Block","types","type","getRandom","length","status","max","Math","random","getType","bin","toString","space","Array","fill","join","match","map","i","Game","render","timer","currentBlock","defaultPos","pos","Object","assign","nextBlock","oldStatus","transform","uniq","getRunAxis","split","floor","min","abs","valid","every","intevalDown","downTimer","setInterval","down","clearInterval","fullRow","matrixData","filter","index","isFull","forEach","unshift","rowArr","h","val","v","stopDown","concat","checkFull","addBlock","gameOver","alert","start","block","toBinner","binFilter","slice","isEnd","runningAxis","harr","axisStr","blockBin","blockEnd","renderPrevBlock","game","document","addEventListener","e","keyCode","left","right","getElementById"],"mappings":"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","file":"app.8c507a53.map","sourceRoot":"..","sourcesContent":["$(() => {\r\n  const $top = $('.top')\r\n  const $area = $('.area')\r\n  const $preview = $('.preview')\r\n  const tpl = {\r\n    area: $('#area-tpl').html()\r\n  }\r\n  const template = _.template\r\n\r\n  // 游戏区\r\n  class Area {\r\n    constructor() {\r\n      this.width = 10\r\n      this.height = 15\r\n      this.active = []\r\n      this.temp = []\r\n    }\r\n    // 获取当前游戏区矩阵\r\n    matrix() {\r\n      const arr = []\r\n      for(let y = 1; y <= this.height; y++) {\r\n        const row = []\r\n        arr.push(row)\r\n        for(let x = 1; x <= this.width; x++) {\r\n          const axis = x+','+y\r\n          row.push([...this.active, ...this.temp].includes(axis) ? 1 : 0)\r\n        }\r\n      }\r\n      return arr\r\n    }\r\n    // 根据矩阵渲染\r\n    render() {\r\n      const data = this.matrix()\r\n      console.log(data)\r\n      const html = template(tpl.area)({data: data})\r\n      $area.html(html)\r\n    }\r\n  }\r\n\r\n  class Block {\r\n    constructor() {\r\n      // 方块类型\r\n      this.types = [\r\n        // 口口\r\n        // 口口\r\n        [0x6600], \r\n        // 口口口口\r\n        [0x2222,0xf00],\r\n        // 口口\r\n        //   口口\r\n        [0xc600,0x2640],\r\n        //   口口\r\n        // 口口\r\n        [0x6c00,0x4620],\r\n        //     口\r\n        // 口口口\r\n        [0x4460,0x2e0,0x6220,0x740],\r\n        // 口\r\n        // 口口口\r\n        [0x2260,0xe20,0x6440,0x4700],\r\n        //   口\r\n        // 口口口\r\n        [0x2620,0x720,0x2320,0x2700],\r\n      ]\r\n      // 当前是什么类型\r\n      this.type = this.types[this.getRandom(this.types.length - 1)]\r\n      // 当前的旋转状态\r\n      this.status = this.getRandom(this.type.length)\r\n    }\r\n    getRandom(max) {\r\n      return (~~(Math.random() * 100) % max)\r\n    }\r\n    getType() {\r\n      return this.type[this.status]\r\n    }\r\n    // 旋转\r\n    transform() {\r\n      this.status++\r\n      if(this.status >= this.type.length) {\r\n        this.status = 0\r\n      }\r\n    }\r\n    // 获取当前方块的二进制数组\r\n    toBinner() {\r\n      const type = this.getType()\r\n      // const status = this.status\r\n      let bin = type.toString(2)\r\n      let space = 16 - bin.length\r\n      bin = new Array(space).fill(0).join('') + bin\r\n      let arr = bin.match(/.{4}/g)\r\n      arr = arr.map(i => [...i].map(i => ~~i))\r\n      return arr\r\n    }\r\n  }\r\n  // 游戏控制\r\n  class Game {\r\n    constructor(area) {\r\n      this.area = area\r\n      area.render()\r\n      this.timer = null\r\n      this.currentBlock = null\r\n      this.defaultPos = {\r\n        y: 0,\r\n        x: 4,\r\n      }\r\n      this.pos = Object.assign({}, this.defaultPos)\r\n      this.nextBlock = new Block()\r\n    }\r\n    // 转换\r\n    transform() {\r\n      const oldStatus = this.currentBlock.status\r\n      this.currentBlock.transform()\r\n      const arr = _.uniq(this.getRunAxis(this.currentBlock).map(axis => axis.split(',')[0]).toString().split(',').map(Math.floor))\r\n      const min = _.min(arr)\r\n      const max = _.max(arr)\r\n      if(min <= 0) {\r\n        this.pos.x = Math.abs(1 - min)\r\n      } else if(max > this.area.width) {\r\n        this.pos.x = this.area.width - ~~(arr.length / 2 + 1) - 1\r\n      }\r\n      this.render()\r\n    }\r\n    // 往下落\r\n    down() {\r\n      this.pos.y++\r\n      this.render()\r\n    }\r\n    // 左移\r\n    left() {\r\n      this.pos.x--\r\n      const arr = this.getRunAxis(this.currentBlock).map(axis => axis.split(',')[0]).toString().split(',')\r\n      const valid = arr.every(i => i >= 1)\r\n      if(valid) {\r\n        this.render()\r\n      }else {\r\n        this.pos.x++\r\n      }\r\n    }\r\n    // 右移\r\n    right() {\r\n      this.pos.x++\r\n      const arr = this.getRunAxis(this.currentBlock).map(axis => axis.split(',')[0]).toString().split(',')\r\n      const valid = arr.every(i => i <= this.area.width)\r\n      if(valid) {\r\n        this.render()\r\n      } else {\r\n        this.pos.x--\r\n      }\r\n    }\r\n    // 使用新的区块开始下落\r\n    addBlock() {\r\n      this.currentBlock = this.nextBlock\r\n      this.nextBlock = new Block()\r\n      // this.render()\r\n      this.intevalDown()\r\n    }\r\n    // 自动下落\r\n    intevalDown() {\r\n      this.downTimer = setInterval(() => {\r\n        this.render()\r\n        this.down()\r\n      }, 1000)\r\n    }\r\n    // 停止自动下落，相当于暂停游戏\r\n    stopDown() {\r\n      this.downTimer && clearInterval(this.downTimer)\r\n    }\r\n    runBlock() {\r\n      \r\n    }\r\n    checkFull() {\r\n      const matrix = this.area.matrix()\r\n      const fullRow = []\r\n      const matrixData = matrix.filter((row, index) => {\r\n        const isFull = row.every(i => i)\r\n        if(isFull) {\r\n          fullRow.push(index + 1)\r\n          return false\r\n        }\r\n        return true\r\n      })\r\n\r\n      if(!fullRow.length) {\r\n        return false\r\n      }\r\n\r\n      fullRow.forEach(i => {\r\n        matrixData.unshift(new Array(this.area.width).fill(0))\r\n      })\r\n\r\n      let active = []\r\n      matrixData.forEach((rowArr, h) => {\r\n        const y = h + 1\r\n        rowArr.forEach((val, v) => {\r\n          if(val) {\r\n            const x = v + 1\r\n            active.push([x, y].join(','))\r\n          }\r\n        })\r\n      })\r\n\r\n\r\n      // let active = this.area.active\r\n      // const maxFullRow = _.max(fullRow)\r\n      // active = active.map(axis => {\r\n      //   let [x, y] = axis.split(',')\r\n      //   if(fullRow.includes(~~y)) {\r\n      //     return false\r\n      //   }\r\n      //   if(y < maxFullRow) {\r\n      //     y = +y + fullRow.length\r\n      //     return [x,y].join(',')\r\n      //   } else {\r\n      //     return axis\r\n      //   }\r\n      // }).filter(i => i)\r\n\r\n      this.area.active = active\r\n      this.area.render()\r\n\r\n    }\r\n    // 当方块下落到底部了，判断碰撞\r\n    blockEnd() {\r\n      \r\n      this.stopDown()\r\n      this.area.active = this.area.active.concat(this.area.temp)\r\n      this.area.temp = []\r\n\r\n      // 消除\r\n      this.checkFull()\r\n      \r\n\r\n      // this.render()\r\n      if(this.pos.y > 1) {\r\n        this.addBlock()\r\n      } else {\r\n        this.gameOver()\r\n      }\r\n      this.pos = Object.assign({}, this.defaultPos)\r\n    }\r\n    // 开始游戏\r\n    start() {\r\n      this.addBlock()\r\n    }\r\n    // 暂停游戏\r\n    pause() {\r\n      this.stopDown()\r\n    }\r\n    // 游戏结束\r\n    gameOver() {\r\n      this.pos = Object.assign({}, this.defaultPos)\r\n      this.stopDown()\r\n      alert('游戏结束')\r\n      this.area.active = []\r\n      this.start()\r\n    }\r\n    // 获取运动中的坐标\r\n    getRunAxis(block) {\r\n      const active = area.active\r\n      const bin = block.toBinner()\r\n      let binFilter = bin.filter(row => !row.every(i => !i))\r\n      if(this.pos.y <= binFilter.length) {\r\n        binFilter = binFilter.slice(binFilter.length - this.pos.y, binFilter.length)\r\n      }\r\n\r\n      let isEnd = false\r\n      const runningAxis = []\r\n\r\n      binFilter.forEach((harr, h) => {\r\n        const y = h\r\n        harr.forEach((val, v) => {\r\n          const x = v\r\n          if(val) {\r\n            const axis = [\r\n              this.pos.x + x,\r\n              this.pos.y <= binFilter.length ? y + 1 : this.pos.y + y - binFilter.length + 1\r\n            ]\r\n            const axisStr = axis.join(',')\r\n            if(active.includes(axisStr) || axis[1] > area.height) {\r\n              // 已碰撞\r\n              isEnd = true\r\n            } else {\r\n              runningAxis.push(axisStr)\r\n            }\r\n          }\r\n        })\r\n      })\r\n      if(isEnd) {\r\n        return false\r\n      } else {\r\n        return runningAxis\r\n      }\r\n\r\n    }\r\n    // 渲染预览下一个区块\r\n    renderPrevBlock() {\r\n      const blockBin = this.nextBlock.toBinner()\r\n      const html = template(tpl.area)({data: blockBin})\r\n      $preview.html(html)\r\n    }\r\n    // 处理矩阵并渲染游戏区\r\n    render() {\r\n      const runningAxis = this.getRunAxis(this.currentBlock)\r\n\r\n      if(!runningAxis) {\r\n        this.blockEnd()\r\n        // if(this.pos.y < 0) {\r\n        //   this.gameOver()\r\n        // }\r\n      } else {\r\n        this.area.temp = runningAxis\r\n        this.area.render()\r\n      }\r\n      \r\n      this.area.render()\r\n      this.renderPrevBlock()\r\n\r\n    }\r\n  }\r\n\r\n  const area = new Area()\r\n  const game = new Game(area)\r\n\r\n  game.start()\r\n\r\n  document.addEventListener('keydown', e => {\r\n    switch(e.keyCode) {\r\n      case 38: game.transform();break;\r\n      case 40: game.down();break;\r\n      case 37: game.left();break;\r\n      case 39: game.right();break;\r\n    }\r\n  })\r\n  document.getElementById('btn-start', e => {\r\n\r\n  })\r\n\r\n  document.getElementById('btn-pause', e => {\r\n    game.stopDown()\r\n  })\r\n\r\n  // const genBlock\r\n})"]}